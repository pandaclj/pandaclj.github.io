<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>小芒果の出生日记</title>
      <link href="/2019/09/xiao-mang-guo-nochu-sheng-ri-ji/"/>
      <url>/2019/09/xiao-mang-guo-nochu-sheng-ri-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="小芒果の出生日记"><a href="#小芒果の出生日记" class="headerlink" title="小芒果の出生日记"></a>小芒果の出生日记</h1><h1 id="背景篇"><a href="#背景篇" class="headerlink" title="背景篇"></a>背景篇</h1><p>&emsp;我，一个普通的不能再普通的杭漂程序猿。我老婆，一个事业单位的工作人员。我，在大部分时间在杭州。我老婆，一直在绍兴。但我们的生活重心都在绍兴，因为家在绍兴。</p><h1 id="检查篇"><a href="#检查篇" class="headerlink" title="检查篇"></a>检查篇</h1><p>&emsp;从得知老婆怀孕开始，我们的生活就开始围绕着小芒果了，虽然此时的她还在肚子里。整个怀孕过程中，大致会经历几个比较重要的检查期，NT -&gt; 唐筛 -&gt; 三维大排畸 -&gt; 四维 -&gt; 糖耐。每一次检查前，心总是被吊着，检查过后就像考完试一样松一口气，当然这个只是暂时的，因为整个孕期都得小心翼翼，这将是一场持久战役。<br>&emsp;第一次和小芒果见面，是去医院检查做B超确定怀孕的那天。那天，小芒果还只是豆子般大小，不过，我们内心都很激动，因为这意味着一个新的生命即将走进我们的生活。第二次比较正式的见面，就是做NT那天了，开心的是NT一次过（可能这也是小芒果最给力的一次了=.=）。遗憾的是，对于小孩的轮廓很模糊，不像其他人做的检查，很清晰。第三次见面，是做四维的时候，因为四维在妇保院没有，我们去的私立医院，而且可以约在周末，于是乎这一次也是我和我老婆一起和小芒果见面的一刻。不过小芒果是白天睡觉，晚上活跃，导致四维我们是最早进去，却最后几个做完，中间不通过后得通过不停地吃东西和爬楼梯来让小芒果活跃起来。好在结果满意，我们也见到了脸蛋肉嘟嘟的小芒果，很开心<br>&emsp;四维过后，差不多6个多月了。之后就要开始进行频繁的产检了。周期越久，产检频次会越高。而且每次都得花蛮长时间，为了让老婆有一次好的检查分娩体验，加上我们这的妇保院也第一次推出了“产科一体化”，在商量之后，我们也是在第一时间报了这个。从之后的经历来看，这个还是值得的。产检无非几个点，观察妈妈的一些生理状况(血压)，观察宝宝的羊水，胎心。之后就是静静地期待小芒果的降临。</p><h2 id="备货篇"><a href="#备货篇" class="headerlink" title="备货篇"></a>备货篇</h2><p>从四维过后，我们就进入了紧张的备货阶段。为此，我们也是查阅了大量的资料。这边我就筛选出一些我们认为有用当然之后也确实用到的（后面也有一些是太突然或者没考虑到而到医院附近的母婴店买的，价格实在是太暴力了）。</p><h3 id="妈妈"><a href="#妈妈" class="headerlink" title="妈妈"></a>妈妈</h3><table><thead><tr><th>时期</th><th>物品</th></tr></thead><tbody><tr><td>分娩时</td><td>NB尿不湿一片、中单（产褥垫）、毛巾、纸巾、产妇专用卫生纸、充电宝（多备几个）</td></tr><tr><td>分娩后</td><td>双熊猫卫生纸（硬）、也可以准备软的</td></tr></tbody></table><h3 id="宝宝"><a href="#宝宝" class="headerlink" title="宝宝"></a>宝宝</h3><p>恒温调奶器、奶瓶沥干盒、奶瓶（多备几个）、吸奶器、奶粉、尿不湿（NB备个2,3袋）、妈妈包、宝宝湿巾、宝宝柔纸巾、外出奶粉携带盒</p><h2 id="取名篇"><a href="#取名篇" class="headerlink" title="取名篇"></a>取名篇</h2><p>我们这取名字一来不能跟长辈或者同辈有重字，而来还要根据出生的时辰算出来五行缺啥，缺啥名字上得带上那个字。所以，我们是想了好多备选名字，而且男孩女孩名字都得想。期间还互相嫌弃对方取的名字不好听<code>（^.^）</code>。这个也是尽快想好，等出生后就可以马上确定下来，方便快点去办理一些相关证件。</p><h2 id="分娩篇"><a href="#分娩篇" class="headerlink" title="分娩篇"></a>分娩篇</h2><p>&emsp;由于两地的关系，我基本是每周回家一次。所以当预产期越来越近的时候，我的内心总是很忐忑。我曾想到过无数次老婆突然要生，然后我紧急赶回家的样子。本来也预想着陪产假能刚好和国庆长假衔接，因为预产期是9月中旬。老婆还想着在宝宝出生前还能出去吃一顿烤肉，一顿火锅。可惜，往往理想很美好，现实却啪啪打脸。幸运的是，8·30那晚刚好周五我从杭州回家。然后31日凌晨的时候，老婆突然把我叫醒，说羊水膜破了。虽然，早给了自己一些遇到这些事情怎么应对的策略。可是真的遇到了，我还是很惊慌，就像一只无头绪的苍蝇，到处乱蹿，不知道怎么办。因为我知道，羊水破比见红更紧急，羊水破意味着必须在一定时间内让宝宝出生，不然后果很严重。好在老婆比较镇定，打了120叫救护车（老婆同事接的电话），我紧急准备一些待产的物品，去医院需要用到的东西，证件等（本来这些打算周末整理的，计划不如变化）。等待救护车到来的过程真的很煎熬（然后发现来的医生护士还是我老婆认识的，瞬间安心），话说这还是我第一次坐救护车。<br>&emsp;到了医院急诊，我就负责办理一些入院手续，然后去病房，一直进行胎心监听。期间，羊水不停地流出来，我的心一直悬着。就这样，整夜没睡，第二天一大早又匆匆赶回家取一些忘带的物品（凌晨事发突然，太慌乱了）。到了早晨医生上班后，老婆就准备进入分娩室开始分娩了。而我们，就只能静静地在分娩室外的座位上等着，唯一能知道里面发生什么的只有门口的一块显示屏，上面显示着xxx开了多少指，进行到了第x产程。从早上，等到晚上5点多，看着一个一个婴儿从里面出来，而老婆的状态仍然是待产中，心里越发的着急，同时整个人也是很疲倦。中间的过程就不过多描述了，经历过的都懂。终于，到了18点左右，说开了两指打无痛了，然后家属可以进去了，心里终于安心了点。进去后过了很久，宫缩一直不明显，开指也一直停留在原来的阶段，甚是担心。之后只能通过不断的增加催产素的浓度，减少甚至关掉无痛，开指才慢慢的增加，中间过程就省略了，总之一个结论，母亲很伟大。这个过程，毕生难忘。好在宝宝平安顺利的出生，差一个小时就9月1号了，我知道，她是想上学了<code>（^.^）</code>。</p><h2 id="证件篇"><a href="#证件篇" class="headerlink" title="证件篇"></a>证件篇</h2><table><thead><tr><th>证件</th><th>所需材料</th><th>备注</th></tr></thead><tbody><tr><td>准生证</td><td>双方身份证信息</td><td>打算怀孕的时候，就可以去办理准生证了，这个可以在办理</td></tr><tr><td>出生证明</td><td>双方身份证原件，落户户口本，小孩出生信息的一张纸</td><td></td></tr><tr><td>户口</td><td>双方身份证原件，户口本，出生证明</td><td></td></tr><tr><td>接种证</td><td>双方身份证原件，户口本，出生证明，医院打疫苗证明</td><td>乙肝第一针和卡介疫苗，卡介疫苗如果小孩指标不达标，不给打，比如黄疸高，这个后续也可以去地方卫生院办理</td></tr><tr><td>医保</td><td>双方身份证原件，户口本，出生证明</td><td>这个很重要，如果宝宝出生后需要住院，出院后可报销，尽快办理</td></tr></tbody></table><h2 id="爸爸篇"><a href="#爸爸篇" class="headerlink" title="爸爸篇"></a>爸爸篇</h2><p>照顾宝宝最多的三件事：洗奶瓶、换尿布、冲奶粉</p><p>持续更新中。。。</p>]]></content>
      
      
      <categories>
          
          <category> 生活日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小芒果 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大话日志</title>
      <link href="/2019/07/da-hua-ri-zhi/"/>
      <url>/2019/07/da-hua-ri-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="大话日志"><a href="#大话日志" class="headerlink" title="大话日志"></a>大话日志</h1><h2 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h2><p>相信大家都听说过<code>log4j</code>、<code>logback</code>、<code>JUL(java.util.logging)</code>、<code>tinylog</code>以及<code>JCL(commons-logging)</code>和<code>slf4j</code>，可能大家都和我一样，接触最多的就是log4j和logback，很多人的认知甚至更多的只是使用层面，可能觉得日志也没什么，会用就行，也不需要特别研究，那么在这篇文章中，我就来讲一讲Java混乱的日志体系以及我最近做的对日志的一些改造。<br>先来看看下面这张图，有个直观的印象：</p><p><img src="/2019/07/da-hua-ri-zhi/15633313202449.jpg" alt></p><p>其实很早的时候，JDK是不提供日志工具类的，所以大家在打日志的时候基本上都是用</p><pre class=" language-java"><code class="language-java">System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"这是日志"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"这是日志"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>`</code></pre><p>但这种方式只会在控制台输出，并且不能将内容按自己的需求格式化，而且性能也不高。后来有个伟大的程序员就写了<code>log4j</code>，并且是开源的，因为<code>log4j</code>特别好用迅速受到了大家的欢迎。SUN公司对<code>log4j</code>的出现是既羡慕又恨，于是在jdk1.4之后推出了<code>JUL</code>，但API却与<code>log4j</code>大不相同。这就让使用者很难受，也很难做切换，于是乎apache推出了<code>JCL</code>。<br><img src="/2019/07/da-hua-ri-zhi/15633322171301.jpg" alt><br><code>JCL</code>提供的是一套接口，并没有实现。<code>log4j</code>和<code>JUL</code>都可以作为它的实现，优先找<code>log4j</code>，然后找<code>JUL</code>，如果都找不到的话<code>JCL</code>也有自己的默认实现<code>simpleLog</code>。<br><code>JCL</code>的出现基本实现了一统江湖，甚至<code>Spring</code>也依赖了<code>JCL</code>。可<code>log4j</code>的作者还是觉得它不够优秀，于是整出了<code>SLF4J</code>，并且写了一套更优秀的实现<code>logback</code>，其他的实现诸如<code>log4j</code>、<code>JUL</code>为其提供适配器。<br><img src="/2019/07/da-hua-ri-zhi/15633348531225.jpg" alt></p><h2 id="日志架构"><a href="#日志架构" class="headerlink" title="日志架构"></a>日志架构</h2><p>我们对日志最直接的三个需求：</p><ol><li>能输出到不同的地方，比如控制台，文件，网络</li><li>能对日志的内容做格式化输出，输出成TEXT、XML、HTML、JSON等</li><li>能对不同的class、package配置不同的日志输出，且有不同级别的日志输出</li></ol><p><img src="/2019/07/da-hua-ri-zhi/15633360788894.jpg" alt></p><p>Appender用于定义日志输出地，Formatter用于定义日志输出格式化方式，Logger用于定义日志实体，可以根据根据class或者package获取，并提供不同级别的日志输出能力。组件内部通过LoggingEvent进行日志事件传递。</p><h2 id="logback"><a href="#logback" class="headerlink" title="logback"></a>logback</h2><p>这里重点介绍下<code>logback</code>，选用<code>logback</code>，主要还是由于<code>logback</code>比<code>log4j</code>做了更多的优化，并且<code>logback</code>算是<code>slf4j</code>的亲儿子，直接实现了<code>slf4j</code>的接口，并不需要适配层。</p><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Logger<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>LoggerFactory<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld1</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Logger logger <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">"com.mysql"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"hello world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span> <span class="token attr-name">scan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">scanPeriod</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>60 seconds<span class="token punctuation">"</span></span> <span class="token attr-name">debug</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>PATTERN<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{32}.%M:%L %msg%n%xException%n<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>CHARSET<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>LOG_PATH<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/opt/logs/spring-boot<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--请求日志--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ACCESS_LOG<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.twodfire.log.appender.AsyncRollingFileAppender<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>queueSize</span><span class="token punctuation">></span></span>512<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>queueSize</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span><span class="token punctuation">></span></span>${LOG_PATH}/access.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>file</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rollingPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.TimeBasedRollingPolicy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fileNamePattern</span><span class="token punctuation">></span></span>${LOG_PATH}/bak/access.%d{yyyy-MM-dd}.log.zip<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fileNamePattern</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maxHistory</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maxHistory</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rollingPolicy</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ch.qos.logback.classic.encoder.PatternLayoutEncoder<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">></span></span>${PATTERN}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>charset</span><span class="token punctuation">></span></span>${CHARSET}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>charset</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>immediateFlush</span><span class="token punctuation">></span></span>${log.immediateFlush}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>immediateFlush</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logger</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ACCESS<span class="token punctuation">"</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>INFO<span class="token punctuation">"</span></span> <span class="token attr-name">additivity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ACCESS_LOG<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ALERT_MONITOR<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logger</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>level</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${log.root.level}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!--只记录INFO及以下级别的--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>FILE_LOG<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!--只记录WARN级别的--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>WARN<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!--只记录error级别的--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ERROR<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ALERT_MONITOR<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>  </code></pre><h3 id="初始化解析过程"><a href="#初始化解析过程" class="headerlink" title="初始化解析过程"></a>初始化解析过程</h3><p><img src="/2019/07/da-hua-ri-zhi/15633685915229.jpg" alt></p><blockquote><ol><li>利用JDK自带的SPI<code>ServiceLoader</code>加载实现类</li><li>如果发现多个实现类，只会选取第一个，并且会打印日志”Class path contains multiple SLF4J providers.“ - <code>org.slf4j.LoggerFactory#bind</code></li><li>如果找不到实现类，则会报”No SLF4J providers were found.”</li><li>找资源顺序  <code>系统变量logback.configurationFile</code> -&gt; <code>logback-test.xml</code> -&gt; <code>logback.groovy</code> -&gt; <code>logback.xml</code></li><li>可以看到初始化是发生在<code>LoggerFactory</code>获取logger的时候发生的，这个过程是比较耗时的，所以最好把这个过程放在应用启动的过程中</li></ol></blockquote><h3 id="日志打印过程"><a href="#日志打印过程" class="headerlink" title="日志打印过程"></a>日志打印过程</h3><p><img src="/2019/07/da-hua-ri-zhi/logback%E6%97%A5%E5%BF%97%E8%BE%93%E5%87%BA%20-2-.jpg" alt></p><blockquote><ol><li>TurboFilter和Filter都为过滤器，但TurboFilter的级别为全局，而Filter为Appender级，TurboFilter是在日志事件初始化前发生，并且每次请求都会调用，所以TurboFilter拦截拥有更高的性能。</li><li>Logger是树状结构，比如”com”是”com.a”的父级，可以通过additivity终止循环。</li><li>会先进入TurboFilter再判断level等级</li></ol></blockquote><h2 id="改造背景"><a href="#改造背景" class="headerlink" title="改造背景"></a>改造背景</h2><h3 id="架构背景"><a href="#架构背景" class="headerlink" title="架构背景"></a>架构背景</h3><ol><li><p>在单机没法无限扩展，并且随着配置的升级价钱也是呈现指数增长，所以机器的横向扩展变得尤为重要，也是为了提供更好的可靠性。但这势必会引起一个问题，对我们通过日志来定位问题变得尤为困难，集群内的机子越多，问题越明显。所以很多公司会选用诸如<code>ELK</code>的架构，<code>logstash</code>做日志收集，<code>ElasticSearch</code>做日志存档、检索，<code>Kibana</code>做日志呈现。所以，为了方便在es上建索引从而使我们能在<code>Kibana</code>上检索，于是就定义了一些日志打印规范。</p><table><thead><tr><th>格式</th><th>检索方式</th></tr></thead><tbody><tr><td>[tag。]msg</td><td>am_marker:[请求日志]</td></tr><tr><td>[tag]。json:{“otherMsg”:”msg”,”name”:”小明”}</td><td>am_marker:[请求日志] json.name:小明</td></tr></tbody></table></li><li><p>配合RPC框架dubbo，分布式调用链做一些日志的统一打印处理,追踪</p></li><li><p>可以通过分布式配置中心动态调整日志，一方面能减少日志量，也能方便线上排查问题</p></li></ol><h3 id="项目现状"><a href="#项目现状" class="headerlink" title="项目现状"></a>项目现状</h3><ol><li>日志重复打到<code>AlertMonitor</code>,其他文件也是；</li><li>很多本该打INFO级别的日志为了能在线上环境打印，打成ERROR级别；</li><li>慢日志粒度不够细，不方便排查问题；</li><li>测试环境的日志和正式环境的日志不统一；</li><li>太多没用的日志配置仍然遗留在代码中，造成混乱；</li><li>ERROR日志会同时打印出入参，但架构那边为了控制日志大小会做截取，导致有用的信息并不能在kibana上显示，仍然需要登录机子去查看具体报错原因，不方便排查；</li><li>日志归类比较混乱；</li><li>不能动态调整日志级别以及logger；</li><li>Appender可以改造成异步方式提高性能；</li><li>日志参数拼接现象严重，这也会带来一些性能上的损失；</li><li>解决jar包冲突，升级到新版本，原来的1.1.2不能使用<code>SizeAndTimeBasedRollingPolicy</code></li></ol><h2 id="改造过程"><a href="#改造过程" class="headerlink" title="改造过程"></a>改造过程</h2><h3 id="此次改造解决了哪些问题"><a href="#此次改造解决了哪些问题" class="headerlink" title="此次改造解决了哪些问题"></a>此次改造解决了哪些问题</h3><ol><li>利用静态代理提供了和<code>slf4j</code>一样的API，只需要修改下包路径就能一键切换，也方便了扩展以实现一些特定需求；</li><li>用占位符替换的方式来输出日志或者在打印日之前加上级别判断，减少不必要的性能损失；</li><li>自定义<code>LessThanLevelFilter</code>实现logs.log打印WARN级别以下日志，warn.log打印WARN级别日志，error.log打印ERROR级别日志；</li><li>部分日志量比较大的日志用<code>SizeAndTimeBasedRollingPolicy</code>策略，按文件大小或者时间来切割文件；</li><li><code>Appender</code>采用异步的方式，这里使用了封装好的<code>com.twodfire.log.appender.AsyncRollingFileAppender</code>，<code>logback</code>也提供了<code>RollingFileAppender</code>和<code>AsyncAppender</code>两者组合来达到相同的目的，使用异步需要注意队列的大小设置；</li><li>提供了与<code>dubbo</code>、<code>aspect</code>、<code>disconf</code>等的集成，开箱即用；</li><li>日志分类清晰，重要日志全部对接<code>kibana</code>，定位问题更容易；</li></ol><h3 id="日志梳理"><a href="#日志梳理" class="headerlink" title="日志梳理"></a>日志梳理</h3><p>日志该怎么打，打的不好不但不利于排查问题，甚至会带来磁盘空间的浪费。在这，我对日志做一些分类。</p><table><thead><tr><th>日志类型</th><th>名称</th><th>备注</th></tr></thead><tbody><tr><td>请求日志</td><td>ACCESS</td><td>用来记录请求调用的接口，入参，请求的IP等请求信息，条件允许可以加上响应内容</td></tr><tr><td>业务日志</td><td>BIZ</td><td>用来记录业务相关的日志，不同的业务可以用tag区分</td></tr><tr><td>数据库日志</td><td>SQL</td><td>用来记录数据执行的SQL</td></tr><tr><td>告警日志</td><td>ALERT_MONITOR</td><td>日志搜集器会搜集此文件的日志用于存储到es，并在kibana显示</td></tr><tr><td>慢日志</td><td>LONG_TIME</td><td>COBAR慢日志 <br> CODIS慢日志 <br>DUBBO慢日志</td></tr><tr><td>ROCKET_MQ日志</td><td>ROCKET_MQ</td><td>rocketmq的消息日志，主要延用了原来的日志类型，也可以定义为MQ，然后用tag区分，类似慢日志</td></tr><tr><td>远程调用日志</td><td>REMOTE</td><td>用来记录调用其他服务的日志</td></tr><tr><td>其他日志</td><td>FILE_LOG</td><td>INFO及以下级别</td></tr><tr><td>其他日志</td><td>WARN</td><td>WARN级别</td></tr><tr><td>其他日志</td><td>ERROR</td><td>ERROR级别</td></tr></tbody></table><blockquote><p>日志间用traceId做串联，在<code>kibana</code>中的索引为<code>json.traceId</code></p></blockquote><h3 id="改造方式"><a href="#改造方式" class="headerlink" title="改造方式"></a>改造方式</h3><p><img src="/2019/07/da-hua-ri-zhi/log%E7%B1%BB%E5%9B%BE%20-1-.jpg" alt></p><p><code>Logger</code>提供了日志能力的接口，<code>LoggerSupport</code>提供了日志能力的实现。<code>Logger</code>由<code>LoggerFactroy</code>创建。<code>LoggerCreator</code>已经提供了一些常用的Logger，在使用层面直接使用<code>LoggerCreator</code>就行。</p><p><strong>集成dubbo</strong><br><code>ExceptionFilter</code>负责对异常进行封装<br><code>PrintLogFilter</code>负责日志打印</p><p><strong>集成disconf</strong><br><code>LogConfig</code>负责动态修改日志级别</p><blockquote><p>具体代码就不在这提供了</p></blockquote><h3 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h3><pre class=" language-java"><code class="language-java">LoggerCreator<span class="token punctuation">.</span>LOG_SYS_ERROR<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"日志内容：{}"</span><span class="token punctuation">,</span> <span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>LoggerCreator<span class="token punctuation">.</span>LOG_SYS_ERROR<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"这是日志"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>LoggerCreator<span class="token punctuation">.</span>LOG_SYS_ERROR<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>Maps<span class="token punctuation">.</span><span class="token function">newHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"这是日志"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>LoggerCreator<span class="token punctuation">.</span>LOG_SYS_ERROR<span class="token punctuation">.</span><span class="token function">errorWithTag</span><span class="token punctuation">(</span><span class="token string">"tag"</span><span class="token punctuation">,</span> <span class="token string">"日志内容：{}"</span><span class="token punctuation">,</span> <span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><ul><li>控制台报错提示</li></ul><pre class=" language-shell"><code class="language-shell">14:19:22,968 |-WARN in ch.qos.logback.classic.encoder.PatternLayoutEncoder@7f36662c - As of version 1.2.0 "immediateFlush" property should be set within the enclosing Appender.14:19:22,968 |-WARN in ch.qos.logback.classic.encoder.PatternLayoutEncoder@7f36662c - Please move "immediateFlush" property into the enclosing appender.14:19:22,984 |-WARN in ch.qos.logback.classic.encoder.PatternLayoutEncoder@7f36662c - Setting the "immediateFlush" property of the enclosing appender to true</code></pre><blockquote><p>解决方案：很明显是将版本升级到1.2.0以上引起的，将<code>immediateFlush</code>移动至<code>Appender</code>内 - ch.qos.logback.core.encoder.LayoutWrappingEncoder#setImmediateFlush</p></blockquote><h2 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h2><ul><li>责任链模式 - <code>ch.qos.logback.classic.spi.TurboFilterList</code></li><li>建造者模式 - <code>com.dfire.soa.item.platform.common.log.extension.dubbo.PrintInfo</code></li></ul><h2 id="亮点"><a href="#亮点" class="headerlink" title="亮点"></a>亮点</h2><ol><li><code>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{32}.%M:%L %msg%n%xException%n</code>，logback会解析该字符串，构建一条conver链表，然后从头结点开始逐个解析<br><img src="/2019/07/da-hua-ri-zhi/convert.png" alt></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="http://www.logback.cn/" target="_blank" rel="noopener">logback中文手册</a></li><li><a href="https://disconf.readthedocs.io/zh_CN/latest/" target="_blank" rel="noopener">disconf文档</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> log </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql索引之坑</title>
      <link href="/2019/07/mysql-suo-yin-zhi-keng/"/>
      <url>/2019/07/mysql-suo-yin-zhi-keng/</url>
      
        <content type="html"><![CDATA[<h1 id="Mysql索引之坑"><a href="#Mysql索引之坑" class="headerlink" title="Mysql索引之坑"></a>Mysql索引之坑</h1><p>注：部分数据做了处理</p><p>查看mysql慢日志</p><p><img src="/2019/07/mysql-suo-yin-zhi-keng/15620576632595.png" alt></p><p>发现命中条数蛮多，于是找下是否是索引的问题</p><p>sql大意是根据店和菜谱id获取该菜谱下的所有菜</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_mme <span class="token keyword">where</span> eid <span class="token operator">=</span> ? <span class="token operator">and</span> menu_id <span class="token operator">=</span> ?</code></pre><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>1.查看表结构 <code>show create table t_mme;</code></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>t_mme<span class="token punctuation">`</span> <span class="token punctuation">(</span>        <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token keyword">COLLATE</span> utf8mb4_unicode_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'主键'</span><span class="token punctuation">,</span>        <span class="token punctuation">`</span>eid<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token keyword">COLLATE</span> utf8mb4_unicode_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'实体id'</span><span class="token punctuation">,</span>        <span class="token punctuation">`</span>menu_id<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token keyword">COLLATE</span> utf8mb4_unicode_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'菜单id'</span><span class="token punctuation">,</span>        <span class="token punctuation">`</span>item_id<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token keyword">COLLATE</span> utf8mb4_unicode_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'菜id'</span><span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 <span class="token keyword">COLLATE</span><span class="token operator">=</span>utf8mb4_unicode_ci ROW_FORMAT<span class="token operator">=</span>DYNAMIC <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">'菜单商品关联表'</span><span class="token punctuation">;</span></code></pre><p>2.也可以查看表上的索引 <code>show index from multiple_menu_element;</code><br><img src="/2019/07/mysql-suo-yin-zhi-keng/15620578849311.jpg" alt></p><p>看索引感觉没问题，难道是自己对索引的理解一直有问题。于是explain下</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#根据菜谱id查</span><span class="token keyword">EXPLAIN</span> <span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">from</span> t_mme  <span class="token keyword">WHERE</span> eid <span class="token operator">=</span> <span class="token string">'xxx'</span>  <span class="token operator">and</span> menu_id <span class="token operator">=</span> <span class="token string">'xxx'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#根据菜id查</span><span class="token keyword">EXPLAIN</span> <span class="token keyword">select</span>  <span class="token function">count</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">from</span> t_mme  <span class="token keyword">WHERE</span> eid <span class="token operator">=</span> <span class="token string">'xxx'</span>  <span class="token operator">and</span> item_id <span class="token operator">=</span> <span class="token string">'xxx'</span><span class="token punctuation">;</span></code></pre><p><img src="/2019/07/mysql-suo-yin-zhi-keng/15620583481702.jpg" alt><br>以上为第一条的执行结果，与预期的有出入</p><p>找dba查找原因：发现部分实例上执行是正确的，部分是有问题的，怀疑是索引的统计信息有问题。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>索引统计有误从而误导了mysql优化器的索引选择</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>1.索引优化，利用<code>force index</code>语法强制使用某个索引，不要让mysql优化器去选择</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">EXPLAIN</span> <span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span>menu_id<span class="token punctuation">)</span> <span class="token keyword">from</span> t_mme  <span class="token keyword">force</span> <span class="token keyword">index</span><span class="token punctuation">(</span>idx_eid_menuId_itemId<span class="token punctuation">)</span> <span class="token keyword">WHERE</span> eid <span class="token operator">=</span> <span class="token string">'xxx'</span>  <span class="token operator">and</span> menuId <span class="token operator">=</span> <span class="token string">'xxx'</span> <span class="token punctuation">;</span></code></pre><p>2.索引统计信息重建</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">analyze</span> <span class="token keyword">table</span> t_mme<span class="token punctuation">;</span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://yq.aliyun.com/articles/502786" target="_blank" rel="noopener">show index from 及analyze table 详解</a></li><li><a href="https://www.cnblogs.com/yycc/p/7338894.html" target="_blank" rel="noopener">mysql explain用法和结果的含义</a></li><li><a href="https://www.cnblogs.com/Alight/p/3906086.html" target="_blank" rel="noopener">MYSQL 分析表、检查表和优化表</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 踩坑之路 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
